#!/bin/bash
set -eou pipefail
# Because git passes in additional information, we need to assign based on the number
# of arguments passed in.

url="${1:?url parameter required}"
audience="${2:?audience parameter required}"
if [[ "$#" -eq 3 ]]; then
  action="${3:?action parameter required}" 
  profile=""
elif [[ "$#" -eq 4 ]]; then
  profile="${3}"
  action="${4:?action parameter required}"
fi

# ignore unsupported actions without error
if [[ "${action}" != "get" ]]; then
    exit 0
fi
# read credential helper input from stdin
args="$(< /dev/stdin)"

# timings are output to stderr, which Git ignores.

TIMEFORMAT='[oidc = %2Rs]'
time {
  oidc_auth_token="$(buildkite-agent oidc request-token --claim pipeline_id --audience "${audience}")"
}

# Request a token for the given repository from the remote server, using the
# OIDC JWT from the agent. The output of this request is in the expected format,
# so is sent to stdout to be read by git.
TIMEFORMAT='[token vendor = %2Rs]'
if [[ -z "${profile}" ]]; then
  time curl --silent --show-error --fail \
    --request POST "${url}/git-credentials" \
    --data "${args}" \
    --header "Authorization: Bearer ${oidc_auth_token}" \
    --header "Content-Type: text/plain" \
    --header "Accept: text/plain"
else
time curl --silent --show-error --fail \
    --request POST "${url}/organization/git-credentials/${profile}" \
    --data "${args}" \
    --header "Authorization: Bearer ${oidc_auth_token}" \
    --header "Content-Type: text/plain" \
    --header "Accept: text/plain"
fi
